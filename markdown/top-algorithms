A compilation of “top” algorithms from different sources.

First, the algorithms that appeared on multiple independent lists:

* The FFT [0] [1] [2] [3] [4] [5] [6]
* The simplex method for linear programming [0] [1] [2] [4] [6]
* The QR algorithm and related decompositions (LU, SVD, etc.) for
  computing eigenvalues and least-squares solutions [0] [1] [2] [3]
  [4]
* Monte Carlo methods and the Metropolis algorithm [0] [1] [2] [6]
* Mergesort [3] [4] [5] [6]
* Krylov subspace iteration methods such as conjugate-gradient and
  Lanczos [0] [1] [2]
* Quicksort [0] [5] [6]
* Hashing and hash tables [3] [4] [6]
* Dijkstra’s algorithm [4] [5] [6]
* PageRank and related link-analysis algorithms [1] [5] [6]
* Huffman coding and other data compression [4] [5] [6]
* Newton and quasi-Newton methods [1] [2] [4]
* Binary search [3] [4] [6]
* RSA [4] [5] [6]
* Heapsort [4] [5] [6]
* Diffie-Hellman key exchange [4] [6]
* The quadratic sieve and other integer factorization algorithms [4] [5]
* The Ford-Fulkerson algorithm for maximum flow [4] [6]
* The decompositional approach to matrix computations [0] [1]
* The Fortran I optimizing compiler [0] [2]
* fast multipole methods (for e.g. N-body simulation) [0] [2]
* the Kalman filter [1] [6]
* Dynamic programming [4] [6]
* Gradient descent [4] [6]
* A* search [4] [6]
* PID control [5] [6]
* RANSAC [4] [6]
* Q-learning [4] [6]
* Gaussian elimination [2] [4]
* the Viterbi algorithm [4] [6]

Here are the ones that I think appeared on only one list:

* Integer relation detection [0]
* JPEG [1]
* least-squares fitting [2]
* Gauss quadrature for numerical integration [2]
* Adams formulae for ODEs [2]
* Runge-Kutta formulae for ODEs [2]
* finite differences for PDEs [2]
* floating-point arithmetic [2]
* splines (including Bézier, de Boor, and others) [2]
* stiff ODE solvers [2]
* the finite element method for PDEs [2]
* orthogonal linear algebra (Givens rotations, etc.) (maybe this
  should be part of the QR item?) [2]
* preconditioning of linear systems [2]
* spectral methods for PDEs [2]
* MATLAB [2]
* multigrid methods for PDEs [2]
* IEEE floating-point arithmetic [2]
* nonsymmetric Krylov iterations [2]
* interior point methods for optimization [2]
* wavelets [2]
* automatic differentiation [2]
* Rabin-Karp string matching (e.g. for plagiarism detection) [6]
* the Gayle-Shapely algorithm for the Stable Marriage problem [6]
* Bloom filters for e.g. malicious site filtering [6]
* LALR parsing [6]
* Red-black trees [6]
* Bresenham’s algorithms for drawing circles and lines [6]
* Kruskal’s algorithm [6]
* Depth-first search [6]
* Breadth-first search [6]
* Convnets [6]
* the forward algorithm for hidden Markov models [6]
* Raycasting [6]
* Knuth-Morris-Pratt string search [6]
* Radix sort [6]
* Markov-chain Monte Carlo/particle filters [6]
* Shor’s algorithm [6]
* prune-and-branch tree search [6]
* Beam search [4]
* Branch and bound (is this the same as “interior point methods”?) [4]
* Buchberger’s algorithm (generalization of Euclid’s) [4]
* Discrete differentiation [4]
* Euclid's algorithm [4]
* The expectation-maximization algorithm (EM-training) [4]
* Binary heaps [4]
* Karatsuba multiplication [4]
* Lenstra-Lenstra-Lovasz (LLL) lattice reduction [4]
* The Schönhage-Strassen algorithm [4]
* Strukturtensor [4]
* Union-find [4]
* SHA-1 and SHA-2 [5]
* PRNGs [5]

[0]: https://www.andrew.cmu.edu/course/15-355/misc/Top%20Ten%20Algorithms.html "the 10 algorithms with the greatest influence on the development and practice of science and engineering in the 20th century (Jack Dongarra) originally at https://www.computer.org/csdl/mags/cs/2000/01/c1022.html"
[1]: https://nickhigham.wordpress.com/2016/03/29/the-top-10-algorithms-in-applied-mathematics/ "which algorithms have the most page locators in the index of The Princeton Companion to Applied Mathematics (PCAM)."
[2]: https://people.maths.ox.ac.uk/trefethen/inventorstalk.pdf "Who invented the great numerical algorithms? Ivory tower or coal face? (Nick Trefethen)"
[3]: https://lemire.me/blog/2010/07/05/the-five-most-important-algorithms/ "The five most important algorithms?  (Daniel Lemire)"
[4]: http://www.risc.jku.at/people/ckoutsch/stuff/e_algorithms.html "The most important algorithms"
[5]: https://medium.com/@_marcos_otero/the-real-10-algorithms-that-dominate-our-world-e95fa9f16c04 "which are the real 10 (or maybe more) algorithms that rule our world."
[6]: https://www.quora.com/Which-are-the-10-algorithms-every-computer-science-student-must-implement-at-least-once-in-life "Which are the 10 algorithms every computer science student must implement at least once in life? (many answers; I’ve omitted most of them here)"
