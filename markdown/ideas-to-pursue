As usual, I’m full of a lot of different ideas I’d like to investigate
more deeply and develop into useful things.  Among these are:

- Manufacturing robot: I want some kind of precise positioning system
  that I can use to deposit or remove material.  The shortest path to
  this is likely inkjet printer carriages, but I need to figure out
  how to physically hook electronics up to their linear encoders, and
  then I probably need to rig up some kind of PID control to drive
  them with.
- The bed platform: I need to build a thing in my bedroom to turn it
  into more of a bedroom and be able to move in.  This involves buying
  or salvaging more steel studs, hooking them together, and putting
  some shit on top, and then at least some kind of cloth around the
  edges.
- Extending the calculator: I have a somewhat awesome interactive
  calculator, but it still needs a lot of work.  It would benefit a
  lot from localStorage, decimal points, and fixing editing so that I
  can add new numbers next to existing ones, and also from a
  multitouch UI.
- Multitouch UI: I have a promising prototype that isn’t yet good
  enough to do anything useful.
- Ice vest: something to enable me to comfortably weather the summer
  in Buenos Aires.
- Dependency-driven recalculation: crossing `make` with Apache Spark.
- Graph notation: a general way to represent digraphs as relatively
  short sequences of symbols.
- Magic Kazoo: a synthesizer you can hold in your mouth and play like
  a kazoo
- Constraint-based quantitative modeling: a system for building
  quantitative models that can include things like three-dimensional
  shapes.
- Ghettobotics: bootstrapping a bitchin electronics lab from garbage.
- Quasicard: a generative form of hypertext that supports exploratory
  data analysis
- Stuff with optimization: a whole list of things that I should be
  able to attack with mathematical optimization, including:
    - Dithering.
    - Image approximation under other constraints, such as mosaic
      tiles or gradient swatches, using a psychovisual model.
    - Or, for example, with an XY robot, an ink model, and a
      psychovisual model.
    - Melody transcription.
    - Magic Sinewave synthesis (with a given reactive filter and
      switching losses, say).
    - Sparse approximation of convolution kernels (generalizations of
      the Hogenauer filter).
    - Kinematic control.
    - Topological optimization for panel cutting.
    - FEM in general.
    - Text layout, as TeX’s badness-minimization approach.  But
      e.g. for JSON.
    - Toolpath optimization?
    - Analog filter design.
    - Relatedly, IIR filter design.
    - Structure from motion, photogrammetry, and structure from shading.
    - Tool choice from mesh model and tolerances — using more precise
      tools where tighter tolerances are needed.
    - Circuit design from available components (measured e.g. with an
      M328)
    - Execution planning in e.g. a query planner, where there are
      multiple possible ways to compute the same result.
    - Index design for a database, which is the same thing taken up a
      level of abstraction — which indices would minimize query cost?
    - Weld placement on weldments to optimize their strength
    - Automated bricolage from gluing together found objects
    - Mesh complexity reduction with bounded error
    - Curve approximation with minimal numbers of control points
    - List decoding of noisy signals
    - Signal approximation (of e.g. audio signals) from given
      primitive signals and combining operators and a closeness metric
      (e.g. a psychoacoustic model).  One aspect of this is
      audiomontage, where you combine prerecorded sounds to produce a
      desired sound, as in notjustmoreidlechatter.
    - Speech recognition, given a speech synthesis program and a
      psychoacoustic model.
    - Generating knitting patterns from triangle-mesh 3-D models
    - Generating laser-cutting patterns from mesh models
    - Cost optimization of laser cutting under various constraints,
      e.g. bounded error to a mesh model, or visual similarity using a
      psychovisual model.
    - Cache allocation optimization
    - Planning a travel path through a city to minimize cost,
      discomfort, worst-case or average-case travel time, or some
      combination
    - Image coregistration
    - Tensegrity design given constraints (e.g. maximum rigidity for
      comfort, minimum rigidity, minimum strength, impact energy,
      strength under given loads, support points)
    - Graded-index optical systems with no surface scattering
    - Materials property estimation from experimental results
    - Circuit or electronic component estimation from experimental
      results
    - Design of linkages or composite materials to produce a given
      force-displacement curve or force-displacement-time curve
    - Inverse filtering to compensate precisely for known output
      transducer imperfections, including nonlinearities
    - Also, of course, for input transducer imperfections
    - Optimizing a predictor of the next sample used for compression
      (including lossless compression) for a given image or sound.
    - Estimating a convolution kernel from two simultaneous signals,
      such as a stereo recording of someone talking in a church.
      Basically this is just inverse convolution.
    - Beamforming
    - Toolpath planning not just from a 3-D model but also, for
      example, to approximate a given grayscale image by, for example,
      carving plaster.
    - Attributing motivations to human choices, e.g. social network
      analysis from Facebook “like” data
    - IQlight design from mesh
    - Robot path planning
    - Robot attitude and position information from sensor
      data — actually SLAM as a whole
    - Most-probable-fault diagnosis from a fault tree and observations
    - Inferring a fault tree from observations
    - Experiment design for fault diagnosis given a fault tree and
      partial information
    - Learning a model of a controllable system (e.g. a robot arm) in
      order to control it and know where the controllable zones are
    - Designing a procedure for a controllable system to optimize the
      important tolerances instead of the less important ones; this
      broadly includes things like planning to cast surfaces that
      don’t need precision followed by grinding surfaces that do, but
      also planning to position workpieces such that the things that
      need precision are in the zones where your actuator and feedback
      are most precise
    - Constraint satisfaction for 3-D modeling
- qyap
- a small, safe IRC client
- a daisy-chaining bus for simple programmable electronics
